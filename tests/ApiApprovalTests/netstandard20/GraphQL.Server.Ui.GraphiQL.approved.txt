namespace GraphQL.Server.Ui.GraphiQL
{
    public class GraphiQLMiddleware
    {
        public GraphiQLMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, GraphQL.Server.Ui.GraphiQL.GraphiQLOptions options) { }
        public System.Threading.Tasks.Task Invoke(Microsoft.AspNetCore.Http.HttpContext httpContext) { }
    }
    public class GraphiQLOptions
    {
        public GraphiQLOptions() { }
        public bool ExplorerExtensionEnabled { get; set; }
        public string GraphQLEndPoint { get; set; }
        public bool HeaderEditorEnabled { get; set; }
        public System.Collections.Generic.Dictionary<string, string>? Headers { get; set; }
        public System.Func<GraphQL.Server.Ui.GraphiQL.GraphiQLOptions, System.IO.Stream> IndexStream { get; set; }
        public System.Func<GraphQL.Server.Ui.GraphiQL.GraphiQLOptions, string, string> PostConfigure { get; set; }
        public GraphQL.Server.Ui.GraphiQL.RequestCredentials RequestCredentials { get; set; }
        public string SubscriptionsEndPoint { get; set; }
    }
    public enum RequestCredentials
    {
        Omit = 0,
        Include = 1,
        SameOrigin = 2,
    }
}
namespace Microsoft.AspNetCore.Builder
{
    public static class GraphiQLApplicationBuilderExtensions
    {
        public static Microsoft.AspNetCore.Builder.IApplicationBuilder UseGraphQLGraphiQL(this Microsoft.AspNetCore.Builder.IApplicationBuilder app, string path = "/ui/graphiql", GraphQL.Server.Ui.GraphiQL.GraphiQLOptions? options = null) { }
    }
}