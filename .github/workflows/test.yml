name: Run code tests

on:
  pull_request:
    branches:
      - master
      - develop

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  should_test:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v2.1.0
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["README.md", "LICENSE.md", ".gitignore"]'
  test:
    needs: should_test
    if: ${{ needs.should_test.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Use .NET Core 3.1 LTS SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
          source-url: https://nuget.pkg.github.com/graphql-dotnet/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Install dependencies
        run: dotnet restore
      - name: Check formatting
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          dotnet tool install -g dotnet-format --version 5.0.205101 --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json
          dotnet format --check -v diag --fix-style warn --fix-analyzers warn || (echo "Run 'dotnet format' to fix formatting issues" && exit 1)
      - name: Build solution [Release]
        run: dotnet build --no-restore -c Release
      - name: Build solution [Debug]
        run: dotnet build --no-restore
      - name: Test solution [Debug]
        run: dotnet test --no-restore --no-build

  buildcheck:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Pass build check
        if: ${{ needs.test.result == 'success' || needs.test.result == 'skipped' }}
        run: exit 0
      - name: Fail build check
        if: ${{ needs.test.result != 'success' && needs.test.result != 'skipped' }}
        run: exit 1
